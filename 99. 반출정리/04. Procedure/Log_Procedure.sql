CREATE OR REPLACE PROCEDURE write_log(workload_nm varchar, log_text varchar)
    LANGUAGE plpgsql
AS $$
    
DECLARE

    vExists bool;
    tableList cursor for 
        SELECT n.nspname || '.' ||c.relname as name FROM pg_catalog.pg_class c
        JOIN   pg_catalog.pg_namespace n ON n.oid = c.relnamespace
        WHERE  n.nspname = 'processing_log' and c.relname != 'log_total';
    v_view_sql varchar(65535);
    target_table record;

BEGIN
    
    SELECT EXISTS (
       SELECT 1 FROM pg_catalog.pg_class c
       JOIN   pg_catalog.pg_namespace n ON n.oid = c.relnamespace
       WHERE  n.nspname = 'processing_log'
       AND    c.relname = workload_nm
    ) into vExists;

    IF vExists THEN
        EXECUTE 'INSERT INTO processing_log.' || workload_nm || '(workload_nm, log_text)' ||
            ' VALUES ( ' || CHR(39) || workload_nm ||  CHR(39) || ', ' || CHR(39) || log_text || CHR(39) || ')';

    ELSE

        EXECUTE 'CREATE TABLE IF NOT EXISTS processing_log.' || workload_nm ||
            ' ( ' ||
                ' seq BIGINT GENERATED BY DEFAULT AS IDENTITY(1, 1)' ||
                ' ,workload_nm VARCHAR(400) ' ||
                ' ,log_text VARCHAR(65535) ' ||
                ' ,timevalue DATETIME default getdate()' ||
            ' ) ' ||
        ' DISTSTYLE EVEN';
    
        EXECUTE 'INSERT INTO processing_log.' || workload_nm || '(workload_nm, log_text)' ||
            ' VALUES ( ' || CHR(39) || workload_nm ||  CHR(39) || ', ' || CHR(39) || log_text || CHR(39) || ')';
                
        open tableList;
        fetch tableList into target_table;
    
        v_view_sql := 'CREATE OR REPLACE VIEW processing_log.log_total as (';    
        v_view_sql := v_view_sql || ' SELECT * FROM ' || target_table.name || ' ';

        Loop
            fetch tableList into target_table;
                   exit when not found;               
            v_view_sql := v_view_sql || 'UNION ALL SELECT * FROM ' || target_table.name || ' ';            
        End Loop;
     
        v_view_sql := v_view_sql || ') WITH NO SCHEMA BINDING';
        
        EXECUTE v_view_sql;
    
    END IF;

    --COMMIT;
EXCEPTION     
    WHEN OTHERS THEN
        RAISE INFO 'Error Message: ';
        RAISE INFO 'PROC_NAME: %', workload_nm;
END;
$$
;

CALL write_log('workload_1', 'Process Success' );
CALL write_log('workload_2', 'Process Success' );
CALL write_log('workload_3', 'Process Success' );
CALL write_log('workload_4', 'Process Success' );
CALL write_log('workload_5', 'Process Fail' );

